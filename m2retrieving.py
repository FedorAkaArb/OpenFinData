import requests


# Module, which is responsible for getting required from user data
class M2Retrieving:
    @staticmethod
    def get_data(input_string):
        """Getting JSON data based on input parameters"""

        # 1. Преобразовать входную строку в лист                                -> get_data
        params = input_string.split(',')

        # 2. Создать мэп списка                                                 -> _list_to_map
        mapper = M2Retrieving._list_to_map(params)

        # 3. Проверить какому из существующих мэпов соответствует данный мэп
        # 4. Получить MDX запрос для мэпа                                       -> _get_mdx_skeleton_for_map

        mdx_skeleton = M2Retrieving._get_mdx_skeleton_for_mapper(mapper)
        if len(mdx_skeleton) == 0:
            return False
        else:
            # 5. Подставить в MDX запрос вместо "*1, *2, *3 и тд" параметры
            # 6. Отправить MDX запрос                                           -> _refactor_mdx_skeleton
            mdx_query = M2Retrieving._refactor_mdx_skeleton(mdx_skeleton, params)
            result = M2Retrieving._send_mdx_request(mdx_query)
            if len(result == 0):
                return False
            return result

    @staticmethod
    def _list_to_map(parameters):
        return

    @staticmethod
    def _get_mdx_skeleton_for_mapper(mapper):
        return

    @staticmethod
    def _refactor_mdx_skeleton(mdx_skeleton, params):
        return

    @staticmethod
    def _send_mdx_request(mdx_query):
        return

    _mappers = {
        # Расходы
        '1.11.1.1.0': None,
        '1.11.1.0.1': None,
        '1.11.1.1.1': None,
        '1.12.1.0.0': None,
        '1.12.1.1.0': None,
        '1.12.1.0.1': None,
        '1.12.1.1.1': None,
        '1.13.0.1.0': None,
        '1.13.0.1.1': None,
        '1.14.0.1.0': None,
        '1.14.0.1.1': None,

        # Доходы
        '2.21.221.1.0': None,
        '2.21.221.1.1': None,

        '2.22.221.1.1': None,
        '2.22.222.1.0': None,
        '2.22.221.0.0': None,
        '2.22.223.0.0': None,
        '2.22.221.1.0': None,
        '2.22.221.0.1': None,
        '2.22.222.0.1': None,

        '2.23.223.0.0': None,
        '2.23.221.0.0': None,
        '2.23.221.0.1': None,
        '2.23.222.0.1': None,

        # Дефицит/Профицит
        '3.341.1.0': None,
        '3.342.0.0': None,
        '3.342.0.1': None,
        '3.343.0.0': None,
        '3.343.0.1': None
    }

    # Внутренние кодовые обозначения для мэпперов
    _theme = {
        'Расходы': 1,
        'Доходы': 2,
        'Дефицит': 3,
        'Профицит': 3
    }
    # Внутренние кодовые обозначения для мэпперов
    _expenditures = {
        'Плановый': 11,
        'Фактические': 12,
        'Текущие': 13,
        'Запланированные': 14
    }

    # Внутренние кодовые обозначения для мэпперов
    _profit1 = {
        '': 21,
        'Плановые': 22,
        'Текущие': 23
    }

    _profit2 = {
        '': 221,
        'Группа доходов': 222,
        'Показатели исполнения бюджета': 223
    }

    # Внутренние кодовые обозначения для мэпперов
    _deficit = {
        '': 341,
        'Плановый': 342,
        'Текущий': 343
    }

    _places = {
        'Российская  Федерация': '08-2',
        'Крымский федеральный округ': '08-91128',
        'Республика Крым': '08-91129',
        'г. Севастополь': '08-91139',
        'г. Байконур': '08-93015',
        'Северо-Кавказский федеральный округ': '08-24604',
        'Ставропольский край': '08-3086',
        'Республика Ингушетия': '08-2135',
        'Республика Дагестан': '08-4',
        'Кабардино-Балкарская Республика': '08-2374',
        'Республика Северная Осетия - Алания': '08-2507',
        'Карачаево-Черкесская Республика': '08-1354',
        'Чеченская республика': '08-2136',
        'Южный федеральный округ': '08-3',
        'Краснодарский край': '08-749',
        'Астраханская область': '08-1176',
        'Волгоградская область': '08-1512',
        'Ростовская область': '08-2622',
        'Республика Адыгея (Адыгея)': '08-1451',
        'Республика Калмыкия': '08-2006',
        'Приволжский федеральный округ': '08-3417',
        'Нижегородская область': '08-4439',
        'Кировская область': '08-7726',
        'Самарская область': '08-5140',
        'Оренбургская область': '08-5483',
        'Пензенская область': '08-9475',
        'Пермский край': '08-24541',
        'Саратовская область': '08-8860',
        'Ульяновская область': '08-6097',
        'Республика Башкортостан': '08-3418',
        'Республика Марий Эл': '08-9301',
        'Республика Мордовия': '08-7265',
        'Республика Татарстан (Татарстан)': '08-6265',
        'Удмуртская республика': '08-9907',
        'Чувашская Республика - Чувашия': '08-8208',
        'Северо-Западный федеральный округ': '08-10249',
        'Архангельская область': '08-11867',
        'Ненецкий автономный округ': '08-10575',
        'Вологодская область': '08-10809',
        'Калининградская область': '08-10293',
        'г. Санкт-Петербург': '08-11755',
        'Ленинградская область': '08-11404',
        'Мурманская область': '08-10250',
        'Новгородская область': '08-11182',
        'Псковская область': '08-10330',
        'Республика Карелия': '08-11627',
        'Республика Коми': '08-10597',
        'Сибирский федеральный округ': '08-12097',
        'Алтайский край': '08-13781',
        'Красноярский край': '08-15777',
        'Иркутская область': '08-12232',
        'Кемеровская область': '08-14580',
        'Новосибирская область': '08-14804',
        'Омская область': '08-13356',
        'Томская область': '08-15593',
        'Забайкальский край': '08-24584',
        'Республика Бурятия': '08-15295',
        'Республика Алтай': '08-12792',
        'Республика Тыва': '08-12649',
        'Республика Хакасия': '08-12130',
        'Уральский федеральный округ': '08-16333',
        'Курганская область': '08-16921',
        'Свердловская область': '08-16827',
        'Тюменская область': '08-16507',
        'Ханты-Мансийский автономный округ - Югра': '08-16334',
        'Ямало-Ненецкий автономный округ': '08-16448',
        'Челябинская область': '08-17380',
        'Центральный федеральный округ': '08-19099',
        'Белгородская область': '08-22729',
        'Брянская область': '08-22143',
        'Владимирская область': '08-21258',
        'Воронежская область': '08-23249',
        'Ивановская область': '08-23067',
        'Тверская область': '08-21386',
        'Калужская область': '08-20350',
        'Костромская область': '08-20774',
        'Курская область': '08-19479',
        'Липецкая область': '08-20018',
        'г. Москва': '08-23783',
        'Московская область': '08-19100',
        'Орловская область': '08-24262',
        'Рязанская область': '08-22433',
        'Смоленская область': '08-21792',
        'Тамбовская область': '08-23909',
        'Тульская область': '08-21078',
        'Ярославская область': '08-20670',
        'Дальневосточный федеральный округ': '08-17698',
        'Приморский край': '08-18354',
        'Хабаровский край': '08-18540',
        'Амурская область': '08-18776',
        'Камчатский край': '08-24543',
        'Магаданская область': '08-18239',
        'Сахалинская область': '08-18294',
        'Чукотский автономный округ': '08-18184',
        'Республика Саха (Якутия)': '08-17699',
        'Еврейская автономная область': '08-18317'
    }
